{"version":3,"file":"react-avatar-editor.cjs.development.js","sources":["../src/utils/load-image-url.ts","../src/utils/load-image-file.ts","../src/utils/to-radians.ts","../src/index.tsx"],"sourcesContent":["function isDataURL(url: string) {\n  if (url === null) {\n    return false\n  }\n  const regex = /^\\s*data:([a-z]+\\/[a-z]+(;[a-z-]+=[a-z-]+)?)?(;base64)?,[a-z0-9!$&',()*+;=\\-._~:@/?%\\s]*\\s*$/i\n  return !!url.match(regex)\n}\n\nexport default function loadImageURL(\n  imageURL: string,\n  crossOrigin = ''\n): Promise<HTMLImageElement> {\n  return new Promise((resolve, reject) => {\n    const image = new Image()\n    image.onload = () => resolve(image)\n    image.onerror = reject\n    if (isDataURL(imageURL) === false && crossOrigin) {\n      image.crossOrigin = crossOrigin\n    }\n    image.src = imageURL\n  })\n}\n","/* eslint-env browser, node */\nimport loadImageURL from './load-image-url'\n\nexport default function loadImageFile(\n  imageFile: File\n): Promise<HTMLImageElement> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader()\n    reader.onload = e => {\n      try {\n        if (!e.target) {\n          reject('No target')\n        } else {\n          const image = loadImageURL(e.target.result as string)\n          resolve(image)\n        }\n      } catch (e) {\n        reject(e)\n      }\n    }\n    reader.readAsDataURL(imageFile)\n  })\n}\n","// helpers to calculate vectors\nconst toRadians = (degree: number) => degree * (Math.PI / 180)\nexport default toRadians\n","import * as React from 'react'\nimport loadImageURL from './utils/load-image-url'\nimport loadImageFile from './utils/load-image-file'\nimport toRadians from './utils/to-radians'\nimport { DraggableCore, DraggableEvent, DraggableData } from 'react-draggable'\n\ntype BorderType = [number, number] | number\n\ninterface IAvatarEditorProps {\n  style?: any\n  image?: string | File\n  width: number\n  border?: BorderType\n  height: number\n  position?: IPosition\n  crossOrigin?: '' | 'anonymous' | 'use-credentials'\n  onLoadFailure?: () => void\n  onLoadSuccess?: (image: IImageState) => void\n  onImageReady?: () => void\n  onImageChange?: () => void\n  onMouseUp?: () => void\n  onMouseMove?: (e: React.TouchEvent | React.MouseEvent) => void\n  onPositionChange?: (position: IPosition) => void\n}\n\ninterface IPosition {\n  x: number\n  y: number\n}\n\ninterface IImageState {\n  x: number\n  y: number\n  width: number\n  height: number\n  resource?: HTMLImageElement\n}\n\ninterface IAvatarEditorState {\n  dragging: boolean\n  image: IImageState\n}\n\nconst isFileAPISupported = typeof File !== 'undefined'\nconst defaultPixelRatio =\n  typeof window !== 'undefined' && window.devicePixelRatio\n    ? window.devicePixelRatio\n    : 1\n\n// Draws a rounded rectangle on a 2D context.\nconst drawRoundedRect = (\n  context: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  borderRadius: number\n) => {\n  if (borderRadius === 0) {\n    context.rect(x, y, width, height)\n  } else {\n    const widthMinusRad = width - borderRadius\n    const heightMinusRad = height - borderRadius\n    context.translate(x, y)\n    context.arc(\n      borderRadius,\n      borderRadius,\n      borderRadius,\n      Math.PI,\n      Math.PI * 1.5\n    )\n    context.lineTo(widthMinusRad, 0)\n    context.arc(\n      widthMinusRad,\n      borderRadius,\n      borderRadius,\n      Math.PI * 1.5,\n      Math.PI * 2\n    )\n    context.lineTo(width, heightMinusRad)\n    context.arc(\n      widthMinusRad,\n      heightMinusRad,\n      borderRadius,\n      Math.PI * 2,\n      Math.PI * 0.5\n    )\n    context.lineTo(borderRadius, height)\n    context.arc(\n      borderRadius,\n      heightMinusRad,\n      borderRadius,\n      Math.PI * 0.5,\n      Math.PI\n    )\n    context.translate(-x, -y)\n  }\n}\n\nconst defaultEmptyImage = {\n  x: 0.5,\n  y: 0.5,\n  width: 0,\n  height: 0,\n}\n\nconst defaultProps = {\n  scale: 1,\n  rotate: 0,\n  border: 25,\n  borderRadius: 0,\n  width: 200,\n  height: 200,\n  color: [0, 0, 0, 0.5],\n  disableBoundaryChecks: false,\n  disableHiDPIScaling: false,\n}\n\ntype DefaultProps = Readonly<typeof defaultProps>\ntype IAllAvatarEditorProps = IAvatarEditorProps & DefaultProps\n\nclass AvatarEditor extends React.Component<\n  IAllAvatarEditorProps,\n  IAvatarEditorState\n> {\n  static defaultProps = defaultProps\n  private canvas: React.RefObject<HTMLCanvasElement>\n  private pixelRatio = defaultPixelRatio\n\n  constructor(props: IAllAvatarEditorProps) {\n    super(props)\n    this.state = {\n      dragging: false,\n      image: defaultEmptyImage,\n    }\n    this.canvas = React.createRef()\n    this.pixelRatio = props.disableHiDPIScaling ? 1 : defaultPixelRatio\n  }\n\n  componentDidMount() {\n    this.loadImage()\n    const context = this.getContext()\n    this.paint(context)\n  }\n\n  componentDidUpdate(\n    prevProps: IAllAvatarEditorProps,\n    prevState: IAvatarEditorState\n  ) {\n    if (\n      (this.props.image && this.props.image !== prevProps.image) ||\n      this.props.width !== prevProps.width ||\n      this.props.height !== prevProps.height\n    ) {\n      this.loadImage()\n    } else if (!this.props.image) {\n      this.clearImage()\n    }\n\n    const canvas = this.getCanvas()\n    const context = this.getContext()\n    context.clearRect(0, 0, canvas.width, canvas.height)\n    this.paint(context)\n    this.paintImage(context, this.state.image, this.props.border)\n\n    if (\n      prevProps.image !== this.props.image ||\n      prevProps.width !== this.props.width ||\n      prevProps.height !== this.props.height ||\n      prevProps.position !== this.props.position ||\n      prevProps.scale !== this.props.scale ||\n      prevProps.rotate !== this.props.rotate ||\n      prevState.image.x !== this.state.image.x ||\n      prevState.image.y !== this.state.image.y\n    ) {\n      this.props.onImageChange && this.props.onImageChange()\n    }\n  }\n\n  private getCanvas(): HTMLCanvasElement {\n    if (!this.canvas.current) {\n      throw new Error(\n        'No canvas found, please report this to: https://github.com/mosch/react-avatar-editor/issues'\n      )\n    }\n\n    return this.canvas.current\n  }\n\n  private getContext() {\n    const context = this.getCanvas().getContext('2d')\n    if (!context) {\n      throw new Error(\n        ' No context found, please report this to: https://github.com/mosch/react-avatar-editor/issues'\n      )\n    }\n\n    return context\n  }\n\n  private isVertical() {\n    return this.props.rotate % 180 !== 0\n  }\n\n  private getBorders(border: BorderType) {\n    return Array.isArray(border) ? border : [border, border]\n  }\n\n  private getDimensions() {\n    const { width, height, rotate, border } = this.props\n    const [borderX, borderY] = this.getBorders(border)\n    const canvas = this.isVertical()\n      ? { width: height + borderX * 2, height: width + borderY * 2 }\n      : {\n          width: width + borderX * 2,\n          height: height + borderY * 2,\n        }\n\n    return {\n      canvas,\n      rotate,\n      width,\n      height,\n      border,\n    }\n  }\n\n  getImage() {\n    // get relative coordinates (0 to 1)\n    const cropRect = this.getCroppingRect()\n    const image = this.state.image\n\n    // create a canvas with the correct dimensions\n    const canvas = document.createElement('canvas')\n\n    if (image.resource) {\n      // get actual pixel coordinates\n      const actualCropRect = {\n        ...cropRect,\n        x: cropRect.x * image.resource.width,\n        y: cropRect.y * image.resource.height,\n        width: cropRect.width * image.resource.width,\n        height: cropRect.height * image.resource.height,\n      }\n\n      if (this.isVertical()) {\n        canvas.width = actualCropRect.height\n        canvas.height = actualCropRect.width\n      } else {\n        canvas.width = actualCropRect.width\n        canvas.height = actualCropRect.height\n      }\n\n      // draw the full-size image at the correct position,\n      // the image gets truncated to the size of the canvas.\n      const context = canvas.getContext('2d')\n      if (context) {\n        context.translate(canvas.width / 2, canvas.height / 2)\n        context.rotate((this.props.rotate * Math.PI) / 180)\n        context.translate(-(canvas.width / 2), -(canvas.height / 2))\n\n        if (this.isVertical()) {\n          context.translate(\n            (canvas.width - canvas.height) / 2,\n            (canvas.height - canvas.width) / 2\n          )\n        }\n\n        context.drawImage(image.resource, -cropRect.x, -cropRect.y)\n      }\n    }\n\n    return canvas\n  }\n\n  /**\n   * Get the image scaled to original canvas size.\n   * This was default in 4.x and is now kept as a legacy method.\n   */\n  getImageScaledToCanvas() {\n    const { width, height } = this.getDimensions()\n\n    const canvas = document.createElement('canvas')\n\n    if (this.isVertical()) {\n      canvas.width = height\n      canvas.height = width\n    } else {\n      canvas.width = width\n      canvas.height = height\n    }\n\n    const context = canvas.getContext('2d')\n    if (context) {\n      // don't paint a border here, as it is the resulting image\n      this.paintImage(context, this.state.image, 0, 1)\n    }\n\n    return canvas\n  }\n\n  private getXScale() {\n    const canvasAspect = this.props.width / this.props.height\n    const imageAspect = this.state.image.width / this.state.image.height\n\n    return Math.min(1, canvasAspect / imageAspect)\n  }\n\n  private getYScale() {\n    const canvasAspect = this.props.height / this.props.width\n    const imageAspect = this.state.image.height / this.state.image.width\n\n    return Math.min(1, canvasAspect / imageAspect)\n  }\n\n  getCroppingRect() {\n    const position = this.props.position || {\n      x: this.state.image.x,\n      y: this.state.image.y,\n    }\n    const width = (1 / this.props.scale) * this.getXScale()\n    const height = (1 / this.props.scale) * this.getYScale()\n\n    const croppingRect = {\n      x: position.x - width / 2,\n      y: position.y - height / 2,\n      width,\n      height,\n    }\n\n    let xMin = 0\n    let xMax = 1 - croppingRect.width\n    let yMin = 0\n    let yMax = 1 - croppingRect.height\n\n    // If the cropping rect is larger than the image, then we need to change\n    // our maxima & minima for x & y to allow the image to appear anywhere up\n    // to the very edge of the cropping rect.\n    const isLargerThanImage =\n      this.props.disableBoundaryChecks || width > 1 || height > 1\n\n    if (isLargerThanImage) {\n      xMin = -croppingRect.width\n      xMax = 1\n      yMin = -croppingRect.height\n      yMax = 1\n    }\n\n    return {\n      ...croppingRect,\n      x: Math.max(xMin, Math.min(croppingRect.x, xMax)),\n      y: Math.max(yMin, Math.min(croppingRect.y, yMax)),\n    }\n  }\n\n  private loadImage() {\n    const {\n      image,\n      onLoadFailure,\n      onImageReady,\n      onLoadSuccess,\n      crossOrigin,\n    } = this.props\n\n    const handleImageReady = (image: HTMLImageElement) => {\n      const imageState = {\n        ...this.getInitialSize(image.width, image.height),\n        resource: image,\n        x: 0.5,\n        y: 0.5,\n      }\n\n      this.setState({ image: imageState }, onImageReady)\n      onLoadSuccess && onLoadSuccess(imageState)\n    }\n\n    if (isFileAPISupported && image instanceof File) {\n      loadImageFile(image)\n        .then(handleImageReady)\n        .catch(onLoadFailure)\n    } else if (typeof image === 'string') {\n      loadImageURL(image, crossOrigin)\n        .then(handleImageReady)\n        .catch(onLoadFailure)\n    }\n  }\n\n  private getInitialSize(width: number, height: number) {\n    const dimensions = this.getDimensions()\n    const canvasRatio = dimensions.height / dimensions.width\n    const imageRatio = height / width\n\n    if (canvasRatio > imageRatio) {\n      return {\n        height: dimensions.height,\n        width: width * (dimensions.height / height),\n      }\n    } else {\n      return {\n        width: dimensions.width,\n        height: height * (dimensions.width / width),\n      }\n    }\n  }\n\n  private clearImage = () => {\n    const canvas = this.getCanvas()\n    const context = this.getContext()\n    context.clearRect(0, 0, canvas.width, canvas.height)\n    this.setState({\n      image: defaultEmptyImage,\n    })\n  }\n\n  private paintImage(\n    context: CanvasRenderingContext2D,\n    image: IImageState,\n    border: BorderType,\n    scaleFactor = defaultPixelRatio\n  ) {\n    if (image.resource) {\n      const position = this.calculatePosition(image, border)\n      const { x, y } = this.getCroppingRect()\n\n      context.fillStyle = 'red'\n      context.fillRect(x, y, 3, 3)\n\n      context.save()\n\n      context.translate(context.canvas.width / 2, context.canvas.height / 2)\n      context.rotate((this.props.rotate * Math.PI) / 180)\n      context.translate(\n        -(context.canvas.width / 2),\n        -(context.canvas.height / 2)\n      )\n\n      if (this.isVertical()) {\n        context.translate(\n          (context.canvas.width - context.canvas.height) / 2,\n          (context.canvas.height - context.canvas.width) / 2\n        )\n      }\n\n      context.scale(scaleFactor, scaleFactor)\n\n      context.globalCompositeOperation = 'destination-over'\n      context.drawImage(\n        image.resource,\n        position.x,\n        position.y,\n        position.width,\n        position.height\n      )\n\n      context.restore()\n    }\n  }\n\n  private calculatePosition(image: IImageState, border: BorderType) {\n    const [borderX, borderY] = this.getBorders(border)\n\n    const croppingRect = this.getCroppingRect()\n\n    const width = image.width * this.props.scale\n    const height = image.height * this.props.scale\n\n    let x = -croppingRect.x * width\n    let y = -croppingRect.y * height\n\n    if (this.isVertical()) {\n      x += borderY\n      y += borderX\n    } else {\n      x += borderX\n      y += borderY\n    }\n\n    return {\n      x,\n      y,\n      height,\n      width,\n    }\n  }\n\n  private paint(context: CanvasRenderingContext2D) {\n    context.save()\n    context.scale(this.pixelRatio, this.pixelRatio)\n    context.translate(0, 0)\n    context.fillStyle = 'rgba(' + this.props.color.slice(0, 4).join(',') + ')'\n\n    let borderRadius = this.props.borderRadius\n    const dimensions = this.getDimensions()\n    const [borderSizeX, borderSizeY] = this.getBorders(dimensions.border)\n    const height = dimensions.canvas.height\n    const width = dimensions.canvas.width\n\n    // clamp border radius between zero (perfect rectangle) and half the size without borders (perfect circle or \"pill\")\n    borderRadius = Math.max(borderRadius, 0)\n    borderRadius = Math.min(\n      borderRadius,\n      width / 2 - borderSizeX,\n      height / 2 - borderSizeY\n    )\n\n    context.beginPath()\n    // inner rect, possibly rounded\n    drawRoundedRect(\n      context,\n      borderSizeX,\n      borderSizeY,\n      width - borderSizeX * 2,\n      height - borderSizeY * 2,\n      borderRadius\n    )\n    context.rect(width, 0, -width, height) // outer rect, drawn \"counterclockwise\"\n    context.fill('evenodd')\n\n    context.restore()\n  }\n\n  private handleDrag = (_: DraggableEvent, data: DraggableData) => {\n    const { deltaX, deltaY } = data\n    const { rotate, scale, onPositionChange } = this.props\n    const { image } = this.state\n\n    const nextRotate = rotate % 360 < 0 ? rotate + 360 : rotate % 360\n    const width = image.width * scale\n    const height = image.height * scale\n\n    const { x: lastX, y: lastY } = this.getCroppingRect()\n\n    const cos = Math.cos(toRadians(nextRotate))\n    const sin = Math.sin(toRadians(nextRotate))\n\n    const x = lastX * width + -deltaX * cos + deltaY * sin\n    const y = lastY * height + deltaX * sin + -deltaY * cos\n\n    const relativeWidth = (1 / scale) * this.getXScale()\n    const relativeHeight = (1 / scale) * this.getYScale()\n\n    const position = {\n      x: x / width + relativeWidth / 2,\n      y: y / height + relativeHeight / 2,\n    }\n\n    onPositionChange && onPositionChange(position)\n\n    this.setState({\n      image: {\n        ...this.state.image,\n        ...position,\n      },\n    })\n  }\n\n  private handleStartDrag = () => this.setState({ dragging: true })\n  private handleStopDrag = () => this.setState({ dragging: false })\n\n  render() {\n    const {\n      scale,\n      rotate,\n      image,\n      border,\n      borderRadius,\n      width,\n      height,\n      position,\n      color,\n      style,\n      crossOrigin,\n      onLoadFailure,\n      onLoadSuccess,\n      onImageReady,\n      onImageChange,\n      onMouseUp,\n      onMouseMove,\n      onPositionChange,\n      disableBoundaryChecks,\n      disableHiDPIScaling,\n      ...rest\n    } = this.props\n\n    const dimensions = this.getDimensions()\n    const defaultStyle = {\n      width: dimensions.canvas.width,\n      height: dimensions.canvas.height,\n      cursor: this.state.dragging ? 'grabbing' : 'grab',\n      touchAction: 'none',\n    }\n\n    const attributes = {\n      width: dimensions.canvas.width * this.pixelRatio,\n      height: dimensions.canvas.height * this.pixelRatio,\n      style: {\n        ...defaultStyle,\n        ...style,\n      },\n    }\n\n    return (\n      <DraggableCore\n        onStart={this.handleStartDrag}\n        onStop={this.handleStopDrag}\n        onDrag={this.handleDrag}\n      >\n        <canvas ref={this.canvas} {...attributes} {...rest} />\n      </DraggableCore>\n    )\n  }\n}\n\nexport default AvatarEditor\n"],"names":["isDataURL","url","regex","match","loadImageURL","imageURL","crossOrigin","Promise","resolve","reject","image","Image","onload","onerror","src","loadImageFile","imageFile","reader","FileReader","e","target","result","readAsDataURL","toRadians","degree","Math","PI","isFileAPISupported","File","defaultPixelRatio","window","devicePixelRatio","drawRoundedRect","context","x","y","width","height","borderRadius","rect","widthMinusRad","heightMinusRad","translate","arc","lineTo","defaultEmptyImage","defaultProps","scale","rotate","border","color","disableBoundaryChecks","disableHiDPIScaling","AvatarEditor","props","pixelRatio","clearImage","canvas","getCanvas","getContext","clearRect","setState","handleDrag","_","data","deltaX","deltaY","onPositionChange","state","nextRotate","getCroppingRect","lastX","lastY","cos","sin","relativeWidth","getXScale","relativeHeight","getYScale","position","handleStartDrag","dragging","handleStopDrag","React","componentDidMount","loadImage","paint","componentDidUpdate","prevProps","prevState","paintImage","onImageChange","current","Error","isVertical","getBorders","Array","isArray","getDimensions","borderX","borderY","getImage","cropRect","document","createElement","resource","actualCropRect","drawImage","getImageScaledToCanvas","canvasAspect","imageAspect","min","croppingRect","xMin","xMax","yMin","yMax","isLargerThanImage","max","onLoadFailure","onImageReady","onLoadSuccess","handleImageReady","imageState","getInitialSize","then","dimensions","canvasRatio","imageRatio","scaleFactor","calculatePosition","fillStyle","fillRect","save","globalCompositeOperation","restore","slice","join","borderSizeX","borderSizeY","beginPath","fill","render","style","onMouseUp","onMouseMove","rest","defaultStyle","cursor","touchAction","attributes","DraggableCore","onStart","onStop","onDrag","Object","assign","ref"],"mappings":"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"}